package com.babuwyt.consignor.ui.activity;

import android.content.Intent;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.text.TextUtils;
import android.util.Log;
import android.view.View;
import android.view.WindowManager;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;

import com.babuwyt.consignor.R;
import com.babuwyt.consignor.base.BaseActivity;
import com.babuwyt.consignor.base.ClientApp;
import com.babuwyt.consignor.base.SessionManager;
import com.babuwyt.consignor.bean.UserBean;
import com.babuwyt.consignor.entity.UserInfoEntity;
import com.babuwyt.consignor.finals.BaseURL;
import com.babuwyt.jonylibrary.inteface.MyCallBack;
import com.babuwyt.jonylibrary.util.MD5Utils;
import com.babuwyt.jonylibrary.util.UHelper;
import com.babuwyt.jonylibrary.util.XUtil;
import com.google.gson.Gson;

import org.xutils.view.annotation.ContentView;
import org.xutils.view.annotation.Event;
import org.xutils.view.annotation.ViewInject;

import java.util.HashMap;
import java.util.Map;

/**
 * Created by lenovo on 2017/6/29.
 */
@ContentView(R.layout.activity_login)
public class LoginActivity extends BaseActivity {
    @ViewInject(R.id.et_name)
    EditText et_name;
    @ViewInject(R.id.et_psd)
    EditText et_psd;
    @ViewInject(R.id.tv_login)
    TextView tv_login;
    @ViewInject(R.id.tv_register)
    TextView tv_register;
    @ViewInject(R.id.tv_forgetpsd)
    TextView tv_forgetpsd;
    private Intent intent;

    @Override
    protected void onCreate(@Nullable Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
//        getWindow().addFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN);//全屏
        init();
    }

    private void init() {
        intent = new Intent();

    }

    @Event(value = {R.id.tv_login, R.id.tv_register, R.id.tv_forgetpsd})
    private void gete(View v) {
        switch (v.getId()) {
            case R.id.tv_login:
                isEmpty();
                break;
            case R.id.tv_forgetpsd:
                intent.setClass(this, ForgetPsdActivity.class);
                startActivity(intent);
                break;
            case R.id.tv_register:
                intent.setClass(this, RegisterActivity.class);
                startActivity(intent);
                break;
        }
    }

    /**
     * 非空判断
     */
    private void isEmpty() {
        if (TextUtils.isEmpty(et_name.getText().toString())) {
            UHelper.showToast(this, getString(R.string.PROMPT_USE_IS_NOT_EMPTY));
            return;
        }
        if (TextUtils.isEmpty(et_psd.getText().toString())) {
            UHelper.showToast(this, getString(R.string.PROMPT_PSD_IS_NOT_EMPTY));
            return;
        }
        if (et_psd.getText().toString().length() < 6) {
            UHelper.showToast(this, getString(R.string.PROMPT_PSD_IS_TOO_SHORT));
            return;
        }
        getDate();
    }


    /**
     * 登陆保存用户登陆状态的信息
     */

    private void saveInfo(UserInfoEntity userInfoEntity) {
        ((ClientApp) getApplication()).saveLoginUser(userInfoEntity);
        Intent intent = new Intent(this, MainActivity.class);
        startActivity(intent);
        finish();
    }

    private void getDate() {
        if (TextUtils.isEmpty(et_name.getText().toString())) {
            UHelper.showToast(this, getString(R.string.please_input_zhanghao));
            return;
        }
        if (TextUtils.isEmpty(et_psd.getText().toString())) {
            UHelper.showToast(this, getString(R.string.please_input_psd));
            return;
        }

        Map<String, String> map = new HashMap<String, String>();
        map.put("userAct", et_name.getText().toString().trim());
        map.put("userPsd", MD5Utils.encrypt(et_psd.getText().toString().trim()));
        loadingDialog.showDialog();
        XUtil.PostJson(BaseURL.LOGIN, map, new MyCallBack<UserBean>() {
            @Override
            public void onSuccess(UserBean result) {
                super.onSuccess(result);
                loadingDialog.dissDialog();
                if (result.isSuccess()) {
                    saveInfo(result.getObj());
                    UHelper.showToast(LoginActivity.this, getString(R.string.login_succeed));
                } else {
                    UHelper.showToast(LoginActivity.this, getString(R.string.login_faild));
                }
            }

            @Override
            public void onError(Throwable ex, boolean isOnCallback) {
                super.onError(ex, isOnCallback);
                UHelper.showToast(LoginActivity.this, getString(R.string.NET_ERROR));
                loadingDialog.dissDialog();
            }
        });
    }

}
