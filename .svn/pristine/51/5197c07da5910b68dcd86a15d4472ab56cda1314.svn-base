package com.babuwyt.siji.ui.activity;

import android.content.Intent;
import android.os.Bundle;
import android.support.v4.app.FragmentManager;
import android.support.v4.app.FragmentTransaction;
import android.support.v4.view.GravityCompat;
import android.support.v4.widget.DrawerLayout;
import android.util.Log;
import android.view.KeyEvent;
import android.view.View;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import android.widget.Toast;

import com.babuwyt.jonylibrary.inteface.MyCallBack;
import com.babuwyt.jonylibrary.util.XUtil;
import com.babuwyt.siji.R;
import com.babuwyt.siji.base.BaseActivity;
import com.babuwyt.siji.base.SessionManager;
import com.babuwyt.siji.bean.NewOrderInfoBean;
import com.babuwyt.siji.bean.OrderNumBean;
import com.babuwyt.siji.entity.NewOrderInfoEntity;
import com.babuwyt.siji.finals.BaseURL;
import com.babuwyt.siji.ui.fragment.MainLeftFragment;
import com.google.gson.Gson;

import org.xutils.view.annotation.ContentView;
import org.xutils.view.annotation.Event;
import org.xutils.view.annotation.ViewInject;

import java.util.ArrayList;

@ContentView(R.layout.activity_main)
public class MainActivity extends BaseActivity {
    @ViewInject(R.id.scrollView)
    ScrollView scrollView;
    @ViewInject(R.id.tv_no_dataview)
    TextView tv_no_dataview;
    @ViewInject(R.id.tv_orderNum)
    TextView tv_orderNum;
    @ViewInject(R.id.drawer_layout)
    DrawerLayout drawer_layout;
    @ViewInject(R.id.layout_topBtn)
    LinearLayout layout_topBtn;
    @ViewInject(R.id.tv_state)
    TextView tv_state;
    @ViewInject(R.id.tv_othershouru)
    TextView tv_othershouru;
    @ViewInject(R.id.tv_othershourudetails)
    TextView tv_othershourudetails;
    @ViewInject(R.id.tv_otherkouchu)
    TextView tv_otherkouchu;
    @ViewInject(R.id.tv_otherkouchudetails)
    TextView tv_otherkouchudetails;
    @ViewInject(R.id.tv_Num)
    TextView tv_Num;
    @ViewInject(R.id.tv_yunfei)
    TextView tv_yunfei;
    @ViewInject(R.id.tv_xianjin)
    TextView tv_xianjin;
    @ViewInject(R.id.tv_youka)
    TextView tv_youka;
    @ViewInject(R.id.tv_zengsong)
    TextView tv_zengsong;
    @ViewInject(R.id.tv_shouru)
    TextView tv_shouru;
    @ViewInject(R.id.tv_remark)
    TextView tv_remark;
    @ViewInject(R.id.tv_start)
    TextView tv_start;
    @ViewInject(R.id.tv_end)
    TextView tv_end;

    private MainLeftFragment fragment;
    private FragmentManager manager;
    private FragmentTransaction leftAction;
    private Intent intent;
    private NewOrderInfoEntity entity;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        init();
        getNum();
        getNewOrder();
    }

    //这里判断有没有数据  有数据显示 没数据提示
    private void isHasData(boolean hasData) {
        if (hasData) {
            scrollView.setVisibility(View.VISIBLE);
            tv_orderNum.setVisibility(View.VISIBLE);
            tv_no_dataview.setVisibility(View.GONE);
            setData();
        } else {
            scrollView.setVisibility(View.GONE);
            tv_orderNum.setVisibility(View.INVISIBLE);
            tv_no_dataview.setVisibility(View.VISIBLE);
        }
    }

    private void setData() {
        if (entity == null) {
            return;
        }
        tv_orderNum.setText(getString(R.string.orderno) + entity.getFsendcarno());
        tv_yunfei.setText(entity.getFshouldpay() + "");//
        tv_youka.setText(entity.getFshouldpayOilcard() + "");//
        tv_othershouru.setText(entity.getFotherin() + "");//
        tv_otherkouchu.setText(entity.getFotherout() + "");//
        tv_xianjin.setText(entity.getCash() + "");//
        tv_zengsong.setText(entity.getFshouldreturnmoney() + "");//
        tv_shouru.setText(entity.getFshouldpay() + entity.getFshouldreturnmoney()
                - entity.getFotherin() - entity.getFotherout() + "");//
        tv_remark.setText(entity.getPickcount() + getString(R.string.ti) + entity.getUnloadcount() + getString(R.string.xie));//运费
        tv_start.setText(entity.getStart());//
        tv_end.setText(entity.getEnd());//
    }

    @Override
    protected void onResume() {
        super.onResume();

    }

    private void init() {
        intent = new Intent();
        manager = getSupportFragmentManager();
        //初始化侧边栏
        fragment = new MainLeftFragment();
        leftAction = manager.beginTransaction();
        leftAction.replace(R.id.fl_content, fragment);
        leftAction.commit();
    }

    @Event(value = {R.id.tv_signpic,R.id.tv_zhuanghuopic,R.id.look_pic, R.id.layout_topBtn, R.id.tv_othershourudetails, R.id.tv_otherkouchudetails, R.id.layout_qiang, R.id.tv_binding, R.id.tv_lookaddress})
    private void getE(View v) {
        switch (v.getId()) {
            case R.id.layout_topBtn:
                if (!drawer_layout.isDrawerOpen(GravityCompat.START)) {
                    drawer_layout.openDrawer(GravityCompat.START);
                }
                break;
            case R.id.tv_othershourudetails:
                intent.setClass(this, OtherCostActivity.class);
                intent.putExtra("type", 1);
                startActivity(intent);
                break;
            case R.id.tv_otherkouchudetails:
                intent.setClass(this, OtherCostActivity.class);
                intent.putExtra("type", 2);
                startActivity(intent);
                break;
            case R.id.layout_qiang:
                intent.setClass(this, GrabOrderListActivity.class);
                startActivity(intent);
                break;
            case R.id.tv_binding:
                intent.setClass(this, BindingYoukaActivity.class);
                startActivity(intent);
                break;
            case R.id.tv_lookaddress:
                intent.setClass(this, LookAddressListActivity.class);
                startActivity(intent);
                break;
            case R.id.look_pic:
                intent.setClass(this, LookPicActivity.class);
                startActivity(intent);
                break;
            case R.id.tv_zhuanghuopic:
                intent.setClass(this, LoadingPicActivity.class);
                startActivity(intent);
                break;
            case R.id.tv_signpic:
                intent.setClass(this, SignPicActivity.class);
                startActivity(intent);
                break;
        }
    }

    //h
    private void getNum() {
        XUtil.GetPing(BaseURL.SELECT_SEND_CARORDERNUM, new ArrayList<String>(), SessionManager.getInstance().getUser().getWebtoken(), new MyCallBack<OrderNumBean>() {
            @Override
            public void onSuccess(OrderNumBean result) {
                super.onSuccess(result);
                if (result.isSuccess()) {
                    tv_Num.setText(result.getObj() + "");
                    if (result.getObj() > 0) {
                        tv_Num.setVisibility(View.VISIBLE);
                    }
                }
            }

            @Override
            public void onError(Throwable ex, boolean isOnCallback) {
                super.onError(ex, isOnCallback);
            }
        });
    }

    private void getNewOrder() {
        dialog.showDialog();
        XUtil.Post(BaseURL.SENCARORDERINFO, new ArrayList<String>(), SessionManager.getInstance().getUser().getWebtoken(), new MyCallBack<NewOrderInfoBean>() {
            @Override
            public void onSuccess(NewOrderInfoBean result) {
                super.onSuccess(result);
                dialog.dissDialog();
                if (result.isSuccess() && result.getObj().size() >= 1) {
                    entity = result.getObj().get(0);
                    Log.d("shuju", new Gson().toJson(result));
                    isHasData(true);
                } else {
                    isHasData(false);
                }
            }
            @Override
            public void onError(Throwable ex, boolean isOnCallback) {
                super.onError(ex, isOnCallback);
                dialog.dissDialog();
            }
        });
    }
    /**
     * 点击两次退出应用
     * 通过记录按键时间计算时间差实现
     */
    long exitTime = 0;

    @Override
    public boolean onKeyDown(int keyCode, KeyEvent event) {
        if (keyCode == KeyEvent.KEYCODE_BACK) {

            if (drawer_layout.isDrawerOpen(GravityCompat.START)) {
                drawer_layout.closeDrawer(GravityCompat.START);
            } else {
                if (System.currentTimeMillis() - exitTime > 2000) {
                    Toast.makeText(MainActivity.this, getString(R.string.onclickisexit), Toast.LENGTH_SHORT).show();
                    exitTime = System.currentTimeMillis();
                } else {
                    finish();
                    System.exit(0);
                }
            }
        }
        return false;
    }
}
