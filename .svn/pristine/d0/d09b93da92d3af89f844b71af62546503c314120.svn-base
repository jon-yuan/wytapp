package com.babuwyt.consignor.ui.fragment;

import android.content.Intent;
import android.os.Bundle;
import android.support.v7.widget.Toolbar;
import android.view.View;
import android.widget.ListView;

import com.babuwyt.consignor.R;
import com.babuwyt.consignor.adapter.GenzongOrderAdapter;
import com.babuwyt.consignor.base.BaseFragment;
import com.babuwyt.consignor.base.SessionManager;
import com.babuwyt.consignor.bean.OrderListBean;
import com.babuwyt.consignor.entity.OrderEntity;
import com.babuwyt.consignor.finals.BaseURL;
import com.babuwyt.consignor.finals.DataSynEvent;
import com.babuwyt.consignor.ui.activity.GuijiActivity;
import com.babuwyt.consignor.ui.activity.StateGenzongActivity;
import com.babuwyt.consignor.ui.activity.WeiZhiActivity;
import com.babuwyt.jonylibrary.inteface.MyCallBack;
import com.babuwyt.jonylibrary.util.UHelper;
import com.babuwyt.jonylibrary.util.XUtil;

import org.xutils.view.annotation.ContentView;
import org.xutils.view.annotation.ViewInject;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;

import cn.bingoogolapple.refreshlayout.BGANormalRefreshViewHolder;
import cn.bingoogolapple.refreshlayout.BGARefreshLayout;
import de.greenrobot.event.EventBus;

/**
 * Created by lenovo on 2017/9/10.
 */
@ContentView(R.layout.fragment_genzongorder)
public class GenzongOrderFragment extends BaseFragment implements BGARefreshLayout.BGARefreshLayoutDelegate{
    @ViewInject(R.id.toolbar)
    Toolbar toolbar;
    @ViewInject(R.id.listview)
    ListView listview;
    @ViewInject(R.id.refresh)
    BGARefreshLayout refresh;
    private GenzongOrderAdapter mAdapter;
    private ArrayList<OrderEntity> mList;
    private int type;
    private Intent intent;
    private int pageNum=1;
    private int isLoadMore=1; //1刷新 2 加载更多
    public static GenzongOrderFragment newInstance(int type) {
        GenzongOrderFragment fragment = new GenzongOrderFragment();
        Bundle args = new Bundle();
        args.putInt("type", type);
        fragment.setArguments(args);
        return fragment;
    }
    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        if (getArguments() != null) {
            type = getArguments().getInt("type");
        }
    }
    @Override
    public void onActivityCreated(Bundle savedInstanceState) {
        super.onActivityCreated(savedInstanceState);
        init();
        initRefresh();
        getOrder();
    }
    private void initRefresh(){
        refresh.setDelegate(this);
        // 设置下拉刷新和上拉加载更多的风格     参数1：应用程序上下文，参数2：是否具有上拉加载更多功能
//        BGAStickinessRefreshViewHolder refreshViewHolder = new BGA(this, true);
//        // 设置下拉刷新和上拉加载更多的风格
//
//        refreshViewHolder.setRotateImage(R.drawable.bga_refresh_loding);
//        refreshViewHolder.setStickinessColor(R.color.colorAccent);
//        refreshViewHolder.setLoadingMoreText("太多了吧");
        refresh.setRefreshViewHolder(new BGANormalRefreshViewHolder(getActivity(), true));
        refresh.setCustomHeaderView(null, true);
    }

    @Override
    public void onDestroy() {
        super.onDestroy();
    }

    private void init() {
        intent=new Intent();
        toolbar.setVisibility(type);
        toolbar.setNavigationOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                DataSynEvent event=new DataSynEvent();
                event.setType(event.DRAWER_LAYOUT_OPEN);
                EventBus.getDefault().post(event);
            }
        });
        mAdapter=new GenzongOrderAdapter(getActivity());
        listview.setAdapter(mAdapter);
        mList=new ArrayList<OrderEntity>();
        mAdapter.setmList(mList);
        mAdapter.setCallBack(new GenzongOrderAdapter.CallBack() {
            @Override
            public void weizhi(int position) {
                intent.setClass(getActivity(), WeiZhiActivity.class);
                intent.putExtra("orderId",mList.get(position).getOrderId());
                intent.putExtra("name",mList.get(position).getDriverName());
                startActivity(intent);
            }

            @Override
            public void guiji(int position) {
                intent.setClass(getActivity(), GuijiActivity.class);
                intent.putExtra("orderId",mList.get(position).getOrderId());
                startActivity(intent);
            }

            @Override
            public void zhuangtai(int position) {
                intent.setClass(getActivity(), StateGenzongActivity.class);
                intent.putExtra("orderId",mList.get(position).getOrderId());
                startActivity(intent);
            }
        });
    }

    private void getOrder() {
        Map<String, Object> map = new HashMap<String, Object>();
        map.put("userId", SessionManager.getInstance().getUser().getUserId());
        map.put("type", 6);
        map.put("pageNum", pageNum);
        XUtil.PostJsonObj(BaseURL.GETORDERLIST, map, new MyCallBack<OrderListBean>() {
            @Override
            public void onSuccess(OrderListBean result) {
                super.onSuccess(result);
                if (result.isSuccess()) {
                    ArrayList<OrderEntity> list = result.getObj();
                    if (list!=null && list.size()>0){
                        if (isLoadMore==1){
                            mList.clear();
                        }
                        mList.addAll(list);
                        mAdapter.notifyDataSetChanged();
                    }
                    setRefresh();
                }
            }
            @Override
            public void onError(Throwable ex, boolean isOnCallback) {
                super.onError(ex, isOnCallback);
                setRefresh();
            }
        });
    }
    private void setRefresh(){
        if (isLoadMore==1){
            refresh.endRefreshing();
        }else {
            refresh.endLoadingMore();
        }
    }

    @Override
    public void onBGARefreshLayoutBeginRefreshing(BGARefreshLayout refreshLayout) {
        pageNum=1;
        isLoadMore=1;
        getOrder();
    }

    @Override
    public boolean onBGARefreshLayoutBeginLoadingMore(BGARefreshLayout refreshLayout) {
        pageNum++;
        isLoadMore=2;
        getOrder();
        return true;
    }

}
